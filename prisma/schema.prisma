generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role{
  USER
  LAWYER
  ADMIN
}

model User{
  id             Int             @id @default(autoincrement())
  name           String
  email          String          @unique
  password       String          
  NIK            String
  occupation     String?
  role           Role            @default(USER)
  isPremium      Boolean         @default(false)

  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@index([email], name: "idx_user_email")
}

model Lawyer{
  id             Int             @id @default(autoincrement())
  name           String
  email          String          @unique
  password       String
  NIK            Int
  address        String
  university     String
  specialization String
  description    String
  role           Role
  isPremium      Boolean         @default(false)
  rating         Float           @default(0)
  profile        LawyerProfile[]

  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@index([email], name: "idx_lawyer_email")
}

model LawyerProfile{
  id             Int             @id @default(autoincrement())
  lawyerId       Int
  alumnus        String?
  STRNumber      String?
  specialization LawyerSpecialization[]

  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  lawyer         Lawyer          @relation(fields: [lawyerId], references: [id], onDelete: Cascade)

  @@index([lawyerId], name: "idx_lawyerprofile_lawyer")
}

model News {
  id          Int       @id @default(autoincrement())
  title       String
  url         String    @unique
  publishedAt DateTime

  @@index([publishedAt], name: "idx_news_publishedAt")
}

model Specialization {
  id               Int                  @id @default(autoincrement())
  name             String               @unique
  lawyerProfiles   LawyerSpecialization[]

  @@index([name], name: "idx_specialization_name")
}

model LawyerSpecialization {
  lawyerProfileId  Int
  specializationId Int
  lawyerProfile    LawyerProfile  @relation(fields: [lawyerProfileId], references: [id])
  specialization   Specialization @relation(fields: [specializationId], references: [id])

  @@id([lawyerProfileId, specializationId])
}